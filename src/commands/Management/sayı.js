const Command = require("../../base/Command.js");
const Discord = require("discord.js");
const notlar = require("../../models/notlar.js");
const { max } = require("moment");
let serverSettings = require("../../models/serverSettings");
class SayÄ± extends Command {
    constructor(client) {
        super(client, {
            name: "SayÄ±",
            usage: ".sayÄ± [kelime]",
            category: "Management",
            description: "BelirttiÄŸiniz kelimenin hangi Ã¼yelerin isminde olduÄŸunu gÃ¶sterir.",
            aliases: ["sayÄ±", "names"]
        });
    }
    async run(message, args, data) {
        let server = await serverSettings.findOne({
            guildID: message.guild.id
        });
        if(!server.BotOwner.includes(message.author.id) && !server.GuildOwner.includes(message.author.id)) return
        let includes = args[0]
        if (!includes) return this.client.yolla("LÃ¼tfen bir kelime belirtip tekrar deneyin!", message.author, message.channel)
       
        const row = new Discord.MessageActionRow()
        .addComponents(
          new Discord.MessageButton()
            .setCustomId('Listele')
            .setLabel("Listele")
            .setEmoji("ðŸ‘Œ")
            .setStyle('PRIMARY'),
          new Discord.MessageButton()
            .setCustomId('CANCEL')
            .setLabel("Ä°ptal")
            .setStyle('DANGER'),
        );
       
        if (message.guild.members.cache.filter(x => x.user.username.includes(includes)).size === 0) return this.client.yolla("KullanÄ±cÄ±larÄ±n adÄ±nda belirttiÄŸiniz (`"+includes+"`) kelimesinden bulunamadÄ±!", message.author, message.channel)
        if (message.guild.members.cache.filter(x => x.user.username.includes(includes)).size > 500) return this.client.yolla("KullanÄ±cÄ± adÄ±nda `"+includes+"` bulunan kiÅŸi sayÄ±sÄ± 500 Ã¼ geÃ§tiÄŸi iÃ§in gÃ¶nderemiyorum.", message.author, message.channel)
        let msg = await message.channel.send({ content: `KullanÄ±cÄ± adÄ±nda \`${includes}\` kelimesi geÃ§en toplamda ${message.guild.members.cache.filter(x => x.user.username.includes(includes)).size} kadar kiÅŸi bulunmakta. TÃ¼m Ã¼yeleri gÃ¶rÃ¼ntÃ¼lemek istiyorsanÄ±z ðŸ‘Œ emojisine tÄ±klayÄ±nÄ±z.\n\nTepkisizlik dahilinde iÅŸlem 30 saniye iÃ§erisinde iptal edilecektir.`, components: [row]})
        var filter = (button) => button.user.id === message.author.id;
        const collector = msg.createMessageComponentCollector({ filter, time: 30000 })

        collector.on('collect', async (button) => {
            if (button.customId === "Listele") {
            row.components[0].setDisabled(true) 
            msg.edit({ components: [row] }); 
           
            let includesOne = 1
            const throwns = `${this.client.users.cache.filter(x => x.tag.toLowerCase().includes(includes.toLowerCase())).map(x => `**${includesOne++}.** <@${x.id}> - (\`${x.id}\`)`).join("\n")}`
             button.reply(`KullanÄ±cÄ± adÄ±nda \`${includes}\` geÃ§en kullanÄ±cÄ±lar alt tarafta gÃ¶steriliyor.\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n ${throwns}`)
        } else if (button.customId === "CANCEL") {
            row.components[0].setDisabled(true) 
            row.components[1].setDisabled(true) 
            msg.edit({ components: [row] }); 
            button.reply("Ä°ÅŸlem iptal edildi")
        }
    })
    collector.on('end', async (button, reason) => {
        
        row.components[0].setDisabled(true) 
        row.components[1].setDisabled(true) 
        msg.edit({ components: [row] }); 
})
    }
}
    module.exports = SayÄ±;
